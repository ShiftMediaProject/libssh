diff --git a/src/connect.c b/src/connect.c
index dd3bbcf5..91010853 100644
--- a/src/connect.c
+++ b/src/connect.c
@@ -37,6 +37,7 @@
 #include "libssh/misc.h"
 
 #ifdef _WIN32
+#if !defined(WINAPI_FAMILY) || !(WINAPI_FAMILY==WINAPI_FAMILY_PC_APP || WINAPI_FAMILY==WINAPI_FAMILY_PHONE_APP)
 /*
  * Only use Windows API functions available on Windows 2000 SP4 or later.
  * The available constants are in <sdkddkver.h>.
@@ -53,6 +54,7 @@
 #undef NTDDI_VERSION
 #define NTDDI_VERSION 0x05010000 /* NTDDI_WINXP */
 #endif
+#endif
 
 #include <winsock2.h>
 #include <ws2tcpip.h>
diff --git a/src/getpass.c b/src/getpass.c
index 6be33c77..70686735 100644
--- a/src/getpass.c
+++ b/src/getpass.c
@@ -124,6 +124,9 @@ int ssh_getpass(const char *prompt,
                 int echo,
                 int verify)
 {
+#if defined(WINAPI_FAMILY) && (WINAPI_FAMILY==WINAPI_FAMILY_PC_APP || WINAPI_FAMILY==WINAPI_FAMILY_PHONE_APP)
+    return -1;
+#else
     HANDLE h;
     DWORD mode = 0;
     int ok;
@@ -160,6 +163,7 @@ int ssh_getpass(const char *prompt,
     buf[len - 1] = '\0';
 
     return 0;
+#endif
 }
 
 #else
diff --git a/src/init.c b/src/init.c
index e516c331..bf61e0fb 100644
--- a/src/init.c
+++ b/src/init.c
@@ -35,17 +35,44 @@
 #include <winsock2.h>
 #endif
 
+#if defined(_WIN32) && defined(_MSC_VER) && defined(LIBSSH_STATIC)
+# ifdef read
+#  undef read
+#  define BACKUP_READ
+# endif
+# define CONSTRUCTOR_ATTRIBUTE_(_func,p) static void _func(void); \
+    static int _func ## _wrapper(void) { _func(); return 0; } \
+    __pragma(section(".CRT$XCU",read)) \
+    __declspec(allocate(".CRT$XCU")) int (* _func##_)(void) = _func ## _wrapper; \
+    __pragma(comment(linker,"/include:" p #_func "_"))
+# ifdef _WIN64
+#  define CONSTRUCTOR_ATTRIBUTE(f) CONSTRUCTOR_ATTRIBUTE_(f,"")
+# else
+#  define CONSTRUCTOR_ATTRIBUTE(f) CONSTRUCTOR_ATTRIBUTE_(f,"_")
+# endif
+# define DESTRUCTOR_ATTRIBUTE_(_func,p) static void _func(void); \
+    static int _func ## _constructor(void) { atexit (_func); return 0; } \
+    __pragma(section(".CRT$XCU",read)) \
+    __declspec(allocate(".CRT$XCU")) int (* _func##_)(void) = _func ## _constructor; \
+    __pragma(comment(linker,"/include:" p #_func "_"))
+# ifdef _WIN64
+#  define DESTRUCTOR_ATTRIBUTE(f) DESTRUCTOR_ATTRIBUTE_(f,"")
+# else
+#  define DESTRUCTOR_ATTRIBUTE(f) DESTRUCTOR_ATTRIBUTE_(f,"_")
+# endif
+#else
 #ifdef HAVE_CONSTRUCTOR_ATTRIBUTE
-#define CONSTRUCTOR_ATTRIBUTE __attribute__((constructor))
+#define CONSTRUCTOR_ATTRIBUTE(_func) void _func(void) __attribute__((constructor))
 #else
-#define CONSTRUCTOR_ATTRIBUTE
+#define CONSTRUCTOR_ATTRIBUTE(_func)
 #endif /* HAVE_CONSTRUCTOR_ATTRIBUTE */
 
 #ifdef HAVE_DESTRUCTOR_ATTRIBUTE
-#define DESTRUCTOR_ATTRIBUTE __attribute__((destructor))
+#define DESTRUCTOR_ATTRIBUTE(_func) void _func(void) __attribute__((destructor))
 #else
-#define DESTRUCTOR_ATTRIBUTE
+#define DESTRUCTOR_ATTRIBUTE(_func)
 #endif /* HAVE_DESTRUCTOR_ATTRIBUTE */
+#endif
 
 /* Declare static mutex */
 static SSH_MUTEX ssh_init_mutex = SSH_MUTEX_STATIC_INIT;
@@ -56,8 +83,12 @@ static int _ssh_initialized = 0;
 /* Cache the returned value */
 static int _ssh_init_ret = 0;
 
-void libssh_constructor(void) CONSTRUCTOR_ATTRIBUTE;
-void libssh_destructor(void) DESTRUCTOR_ATTRIBUTE;
+CONSTRUCTOR_ATTRIBUTE(libssh_constructor);
+DESTRUCTOR_ATTRIBUTE(libssh_destructor);
+
+#ifdef BACKUP_READ
+# define read _read
+#endif
 
 static int _ssh_init(unsigned constructor) {
 
diff --git a/src/misc.c b/src/misc.c
index 6ae7cdf1..2cb2cb95 100644
--- a/src/misc.c
+++ b/src/misc.c
@@ -33,7 +33,6 @@
 #include <pwd.h>
 #include <sys/socket.h>
 #include <sys/types.h>
-
 #endif /* _WIN32 */
 
 #include <errno.h>
@@ -52,8 +51,13 @@
 
 #ifdef _WIN32
 
-#ifndef _WIN32_IE
-# define _WIN32_IE 0x0501 // SHGetSpecialFolderPath
+#if !defined(WINAPI_FAMILY) || !(WINAPI_FAMILY==WINAPI_FAMILY_PC_APP || WINAPI_FAMILY==WINAPI_FAMILY_PHONE_APP)
+# ifndef _WIN32_IE
+#  define _WIN32_IE 0x0501 // SHGetSpecialFolderPath
+# endif
+# define WIN32_LEAN_AND_MEAN
+# include <windows.h>
+# include <iphlpapi.h>
 #endif
 
 #include <winsock2.h> // Must be the first to include
@@ -110,6 +114,9 @@
 #ifdef _WIN32
 char *ssh_get_user_home_dir(void)
 {
+#if defined(WINAPI_FAMILY) && (WINAPI_FAMILY==WINAPI_FAMILY_PC_APP || WINAPI_FAMILY==WINAPI_FAMILY_PHONE_APP)
+    return NULL;
+#else
   char tmp[PATH_MAX] = {0};
   char *szPath = NULL;
 
@@ -124,6 +131,7 @@ char *ssh_get_user_home_dir(void)
   }
 
   return NULL;
+#endif
 }
 
 /* we have read access on file */
@@ -180,19 +188,22 @@ int ssh_gettimeofday(struct timeval *__p, void *__t)
 
 char *ssh_get_local_username(void)
 {
+#if defined(WINAPI_FAMILY) && (WINAPI_FAMILY==WINAPI_FAMILY_PC_APP || WINAPI_FAMILY==WINAPI_FAMILY_PHONE_APP)
+    return NULL;
+#else
     DWORD size = 0;
     char *user = NULL;
     int rc;
 
     /* get the size */
-    GetUserName(NULL, &size);
+    GetUserNameA(NULL, &size);
 
     user = (char *)malloc(size);
     if (user == NULL) {
         return NULL;
     }
 
-    if (GetUserName(user, &size)) {
+    if (GetUserNameA(user, &size)) {
         rc = ssh_check_username_syntax(user);
         if (rc == SSH_OK) {
             return user;
@@ -202,6 +213,7 @@ char *ssh_get_local_username(void)
     free(user);
 
     return NULL;
+#endif
 }
 
 int ssh_is_ipaddr_v4(const char *str)
@@ -240,6 +252,7 @@ int ssh_is_ipaddr(const char *str)
         int sslen = sizeof(ss);
         char *network_interface = strchr(s, '%');
 
+#if !defined(WINAPI_FAMILY) || !(WINAPI_FAMILY==WINAPI_FAMILY_PC_APP || WINAPI_FAMILY==WINAPI_FAMILY_PHONE_APP)
         /* link-local (IP:v6:addr%ifname). */
         if (network_interface != NULL) {
             rc = if_nametoindex(network_interface + 1);
@@ -249,6 +262,7 @@ int ssh_is_ipaddr(const char *str)
             }
             *network_interface = '\0';
         }
+#endif
         rc = WSAStringToAddressA((LPSTR) s,
                                  AF_INET6,
                                  NULL,
